{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import operator\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "np.random.seed(0)\n",
    "X=np.random.rand(100,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.5488135 ],\n",
       "       [0.71518937],\n",
       "       [0.60276338],\n",
       "       [0.54488318],\n",
       "       [0.4236548 ],\n",
       "       [0.64589411],\n",
       "       [0.43758721],\n",
       "       [0.891773  ],\n",
       "       [0.96366276],\n",
       "       [0.38344152],\n",
       "       [0.79172504],\n",
       "       [0.52889492],\n",
       "       [0.56804456],\n",
       "       [0.92559664],\n",
       "       [0.07103606],\n",
       "       [0.0871293 ],\n",
       "       [0.0202184 ],\n",
       "       [0.83261985],\n",
       "       [0.77815675],\n",
       "       [0.87001215],\n",
       "       [0.97861834],\n",
       "       [0.79915856],\n",
       "       [0.46147936],\n",
       "       [0.78052918],\n",
       "       [0.11827443],\n",
       "       [0.63992102],\n",
       "       [0.14335329],\n",
       "       [0.94466892],\n",
       "       [0.52184832],\n",
       "       [0.41466194],\n",
       "       [0.26455561],\n",
       "       [0.77423369],\n",
       "       [0.45615033],\n",
       "       [0.56843395],\n",
       "       [0.0187898 ],\n",
       "       [0.6176355 ],\n",
       "       [0.61209572],\n",
       "       [0.616934  ],\n",
       "       [0.94374808],\n",
       "       [0.6818203 ],\n",
       "       [0.3595079 ],\n",
       "       [0.43703195],\n",
       "       [0.6976312 ],\n",
       "       [0.06022547],\n",
       "       [0.66676672],\n",
       "       [0.67063787],\n",
       "       [0.21038256],\n",
       "       [0.1289263 ],\n",
       "       [0.31542835],\n",
       "       [0.36371077],\n",
       "       [0.57019677],\n",
       "       [0.43860151],\n",
       "       [0.98837384],\n",
       "       [0.10204481],\n",
       "       [0.20887676],\n",
       "       [0.16130952],\n",
       "       [0.65310833],\n",
       "       [0.2532916 ],\n",
       "       [0.46631077],\n",
       "       [0.24442559],\n",
       "       [0.15896958],\n",
       "       [0.11037514],\n",
       "       [0.65632959],\n",
       "       [0.13818295],\n",
       "       [0.19658236],\n",
       "       [0.36872517],\n",
       "       [0.82099323],\n",
       "       [0.09710128],\n",
       "       [0.83794491],\n",
       "       [0.09609841],\n",
       "       [0.97645947],\n",
       "       [0.4686512 ],\n",
       "       [0.97676109],\n",
       "       [0.60484552],\n",
       "       [0.73926358],\n",
       "       [0.03918779],\n",
       "       [0.28280696],\n",
       "       [0.12019656],\n",
       "       [0.2961402 ],\n",
       "       [0.11872772],\n",
       "       [0.31798318],\n",
       "       [0.41426299],\n",
       "       [0.0641475 ],\n",
       "       [0.69247212],\n",
       "       [0.56660145],\n",
       "       [0.26538949],\n",
       "       [0.52324805],\n",
       "       [0.09394051],\n",
       "       [0.5759465 ],\n",
       "       [0.9292962 ],\n",
       "       [0.31856895],\n",
       "       [0.66741038],\n",
       "       [0.13179786],\n",
       "       [0.7163272 ],\n",
       "       [0.28940609],\n",
       "       [0.18319136],\n",
       "       [0.58651293],\n",
       "       [0.02010755],\n",
       "       [0.82894003],\n",
       "       [0.00469548]])"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y=np.sin(2*np.pi*X)+np.random.rand(100,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.37589817],\n",
       "       [-0.70616765],\n",
       "       [ 0.13345127],\n",
       "       [ 0.68390235],\n",
       "       [ 0.71025825],\n",
       "       [-0.21742843],\n",
       "       [ 0.97421905],\n",
       "       [-0.05654912],\n",
       "       [-0.00325359],\n",
       "       [ 1.62137431],\n",
       "       [-0.51870546],\n",
       "       [ 0.66585226],\n",
       "       [ 0.28484889],\n",
       "       [-0.15321017],\n",
       "       [ 1.24545824],\n",
       "       [ 0.91701694],\n",
       "       [ 1.00779772],\n",
       "       [-0.28698531],\n",
       "       [-0.10265612],\n",
       "       [-0.03638478],\n",
       "       [ 0.59131312],\n",
       "       [-0.45135258],\n",
       "       [ 1.19575982],\n",
       "       [-0.3376686 ],\n",
       "       [ 1.10045852],\n",
       "       [-0.16380362],\n",
       "       [ 0.80296453],\n",
       "       [-0.03911964],\n",
       "       [ 0.52332724],\n",
       "       [ 0.80094617],\n",
       "       [ 1.61383628],\n",
       "       [-0.5596614 ],\n",
       "       [ 0.40751718],\n",
       "       [-0.11857319],\n",
       "       [ 0.68775064],\n",
       "       [-0.0827692 ],\n",
       "       [-0.07318916],\n",
       "       [-0.01717709],\n",
       "       [ 0.30597489],\n",
       "       [-0.47821909],\n",
       "       [ 1.66902704],\n",
       "       [ 0.75296061],\n",
       "       [-0.51048713],\n",
       "       [ 1.26136473],\n",
       "       [-0.06014556],\n",
       "       [-0.17434185],\n",
       "       [ 1.06940503],\n",
       "       [ 1.64381655],\n",
       "       [ 1.63092372],\n",
       "       [ 1.75429034],\n",
       "       [-0.27744934],\n",
       "       [ 1.24440619],\n",
       "       [ 0.08950856],\n",
       "       [ 1.21369021],\n",
       "       [ 1.0906239 ],\n",
       "       [ 1.69671628],\n",
       "       [-0.01302257],\n",
       "       [ 1.56888688],\n",
       "       [ 0.61728175],\n",
       "       [ 1.06855368],\n",
       "       [ 1.53826993],\n",
       "       [ 1.09278106],\n",
       "       [-0.10969174],\n",
       "       [ 1.62956814],\n",
       "       [ 1.91972354],\n",
       "       [ 1.59023174],\n",
       "       [-0.89043823],\n",
       "       [ 0.93293184],\n",
       "       [-0.12118566],\n",
       "       [ 0.73940772],\n",
       "       [ 0.37366578],\n",
       "       [ 0.25003711],\n",
       "       [ 0.05450043],\n",
       "       [-0.59361802],\n",
       "       [-0.20402781],\n",
       "       [ 0.46766843],\n",
       "       [ 1.32418155],\n",
       "       [ 1.61352818],\n",
       "       [ 1.66268475],\n",
       "       [ 0.71053687],\n",
       "       [ 1.07484392],\n",
       "       [ 1.13450022],\n",
       "       [ 0.96945491],\n",
       "       [-0.69748927],\n",
       "       [ 0.52785171],\n",
       "       [ 1.60929463],\n",
       "       [ 0.39007988],\n",
       "       [ 1.14647509],\n",
       "       [ 0.27084077],\n",
       "       [-0.11783137],\n",
       "       [ 1.3068399 ],\n",
       "       [-0.65850864],\n",
       "       [ 0.92284781],\n",
       "       [-0.03332953],\n",
       "       [ 1.70905523],\n",
       "       [ 1.40364108],\n",
       "       [-0.28978592],\n",
       "       [ 0.38036009],\n",
       "       [-0.82146654],\n",
       "       [ 0.46391489]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_b=np.c_[np.ones((100,1)),X]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.        , 0.5488135 ],\n",
       "       [1.        , 0.71518937],\n",
       "       [1.        , 0.60276338],\n",
       "       [1.        , 0.54488318],\n",
       "       [1.        , 0.4236548 ],\n",
       "       [1.        , 0.64589411],\n",
       "       [1.        , 0.43758721],\n",
       "       [1.        , 0.891773  ],\n",
       "       [1.        , 0.96366276],\n",
       "       [1.        , 0.38344152],\n",
       "       [1.        , 0.79172504],\n",
       "       [1.        , 0.52889492],\n",
       "       [1.        , 0.56804456],\n",
       "       [1.        , 0.92559664],\n",
       "       [1.        , 0.07103606],\n",
       "       [1.        , 0.0871293 ],\n",
       "       [1.        , 0.0202184 ],\n",
       "       [1.        , 0.83261985],\n",
       "       [1.        , 0.77815675],\n",
       "       [1.        , 0.87001215],\n",
       "       [1.        , 0.97861834],\n",
       "       [1.        , 0.79915856],\n",
       "       [1.        , 0.46147936],\n",
       "       [1.        , 0.78052918],\n",
       "       [1.        , 0.11827443],\n",
       "       [1.        , 0.63992102],\n",
       "       [1.        , 0.14335329],\n",
       "       [1.        , 0.94466892],\n",
       "       [1.        , 0.52184832],\n",
       "       [1.        , 0.41466194],\n",
       "       [1.        , 0.26455561],\n",
       "       [1.        , 0.77423369],\n",
       "       [1.        , 0.45615033],\n",
       "       [1.        , 0.56843395],\n",
       "       [1.        , 0.0187898 ],\n",
       "       [1.        , 0.6176355 ],\n",
       "       [1.        , 0.61209572],\n",
       "       [1.        , 0.616934  ],\n",
       "       [1.        , 0.94374808],\n",
       "       [1.        , 0.6818203 ],\n",
       "       [1.        , 0.3595079 ],\n",
       "       [1.        , 0.43703195],\n",
       "       [1.        , 0.6976312 ],\n",
       "       [1.        , 0.06022547],\n",
       "       [1.        , 0.66676672],\n",
       "       [1.        , 0.67063787],\n",
       "       [1.        , 0.21038256],\n",
       "       [1.        , 0.1289263 ],\n",
       "       [1.        , 0.31542835],\n",
       "       [1.        , 0.36371077],\n",
       "       [1.        , 0.57019677],\n",
       "       [1.        , 0.43860151],\n",
       "       [1.        , 0.98837384],\n",
       "       [1.        , 0.10204481],\n",
       "       [1.        , 0.20887676],\n",
       "       [1.        , 0.16130952],\n",
       "       [1.        , 0.65310833],\n",
       "       [1.        , 0.2532916 ],\n",
       "       [1.        , 0.46631077],\n",
       "       [1.        , 0.24442559],\n",
       "       [1.        , 0.15896958],\n",
       "       [1.        , 0.11037514],\n",
       "       [1.        , 0.65632959],\n",
       "       [1.        , 0.13818295],\n",
       "       [1.        , 0.19658236],\n",
       "       [1.        , 0.36872517],\n",
       "       [1.        , 0.82099323],\n",
       "       [1.        , 0.09710128],\n",
       "       [1.        , 0.83794491],\n",
       "       [1.        , 0.09609841],\n",
       "       [1.        , 0.97645947],\n",
       "       [1.        , 0.4686512 ],\n",
       "       [1.        , 0.97676109],\n",
       "       [1.        , 0.60484552],\n",
       "       [1.        , 0.73926358],\n",
       "       [1.        , 0.03918779],\n",
       "       [1.        , 0.28280696],\n",
       "       [1.        , 0.12019656],\n",
       "       [1.        , 0.2961402 ],\n",
       "       [1.        , 0.11872772],\n",
       "       [1.        , 0.31798318],\n",
       "       [1.        , 0.41426299],\n",
       "       [1.        , 0.0641475 ],\n",
       "       [1.        , 0.69247212],\n",
       "       [1.        , 0.56660145],\n",
       "       [1.        , 0.26538949],\n",
       "       [1.        , 0.52324805],\n",
       "       [1.        , 0.09394051],\n",
       "       [1.        , 0.5759465 ],\n",
       "       [1.        , 0.9292962 ],\n",
       "       [1.        , 0.31856895],\n",
       "       [1.        , 0.66741038],\n",
       "       [1.        , 0.13179786],\n",
       "       [1.        , 0.7163272 ],\n",
       "       [1.        , 0.28940609],\n",
       "       [1.        , 0.18319136],\n",
       "       [1.        , 0.58651293],\n",
       "       [1.        , 0.02010755],\n",
       "       [1.        , 0.82894003],\n",
       "       [1.        , 0.00469548]])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "theta=np.linalg.inv(X_b.T.dot(X_b)).dot(X_b.T).dot(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1.43930973]\n",
      " [-1.89671609]]\n"
     ]
    }
   ],
   "source": [
    "print(theta)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred=X*theta[1]+theta[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.39836633],\n",
       "       [ 0.08279856],\n",
       "       [ 0.29603874],\n",
       "       [ 0.40582103],\n",
       "       [ 0.63575686],\n",
       "       [ 0.21423198],\n",
       "       [ 0.60933103],\n",
       "       [-0.25213046],\n",
       "       [-0.38848493],\n",
       "       [ 0.71203004],\n",
       "       [-0.06236788],\n",
       "       [ 0.43614623],\n",
       "       [ 0.36189048],\n",
       "       [-0.3162843 ],\n",
       "       [ 1.3045745 ],\n",
       "       [ 1.27405019],\n",
       "       [ 1.40096117],\n",
       "       [-0.13993372],\n",
       "       [-0.03663269],\n",
       "       [-0.2108563 ],\n",
       "       [-0.41685142],\n",
       "       [-0.07646717],\n",
       "       [ 0.5640144 ],\n",
       "       [-0.04113251],\n",
       "       [ 1.21497673],\n",
       "       [ 0.22556124],\n",
       "       [ 1.16740925],\n",
       "       [-0.352459  ],\n",
       "       [ 0.44951163],\n",
       "       [ 0.65281376],\n",
       "       [ 0.93752285],\n",
       "       [-0.02919176],\n",
       "       [ 0.57412206],\n",
       "       [ 0.36115192],\n",
       "       [ 1.40367081],\n",
       "       [ 0.26783055],\n",
       "       [ 0.27833793],\n",
       "       [ 0.2691611 ],\n",
       "       [-0.35071243],\n",
       "       [ 0.1460902 ],\n",
       "       [ 0.75742531],\n",
       "       [ 0.6103842 ],\n",
       "       [ 0.11610142],\n",
       "       [ 1.32507911],\n",
       "       [ 0.17464258],\n",
       "       [ 0.1673001 ],\n",
       "       [ 1.04027374],\n",
       "       [ 1.19477315],\n",
       "       [ 0.8410317 ],\n",
       "       [ 0.74945366],\n",
       "       [ 0.35780835],\n",
       "       [ 0.60740719],\n",
       "       [-0.43535483],\n",
       "       [ 1.2457597 ],\n",
       "       [ 1.04312983],\n",
       "       [ 1.13335137],\n",
       "       [ 0.20054867],\n",
       "       [ 0.95888747],\n",
       "       [ 0.55485059],\n",
       "       [ 0.97570378],\n",
       "       [ 1.13778957],\n",
       "       [ 1.22995943],\n",
       "       [ 0.19443884],\n",
       "       [ 1.17721591],\n",
       "       [ 1.0664488 ],\n",
       "       [ 0.73994277],\n",
       "       [-0.11788133],\n",
       "       [ 1.25513618],\n",
       "       [-0.15003385],\n",
       "       [ 1.25703834],\n",
       "       [-0.41275664],\n",
       "       [ 0.55041146],\n",
       "       [-0.41332874],\n",
       "       [ 0.29208951],\n",
       "       [ 0.03713661],\n",
       "       [ 1.36498162],\n",
       "       [ 0.90290522],\n",
       "       [ 1.21133098],\n",
       "       [ 0.87761586],\n",
       "       [ 1.21411696],\n",
       "       [ 0.83618592],\n",
       "       [ 0.65357045],\n",
       "       [ 1.31764014],\n",
       "       [ 0.12588672],\n",
       "       [ 0.36462764],\n",
       "       [ 0.93594122],\n",
       "       [ 0.44685673],\n",
       "       [ 1.26113125],\n",
       "       [ 0.34690275],\n",
       "       [-0.32330131],\n",
       "       [ 0.83507488],\n",
       "       [ 0.17342173],\n",
       "       [ 1.18932661],\n",
       "       [ 0.0806404 ],\n",
       "       [ 0.89038854],\n",
       "       [ 1.09184773],\n",
       "       [ 0.32686121],\n",
       "       [ 1.40117143],\n",
       "       [-0.13295416],\n",
       "       [ 1.43040375]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(X,Y,'b.')\n",
    "plt.plot(X, y_pred, color='r')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "    m = len(X)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "   for i in range(m):\n",
    "    to=0.8\n",
    "    to2=to**2\n",
    "    tosq=2*to**2\n",
    "    exptosq=np.exp(tosq)\n",
    "    w = np.exp(-(X - X[i])**2)/exptosq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.20678733],\n",
       "       [0.16783036],\n",
       "       [0.19442958],\n",
       "       [0.20767046],\n",
       "       [0.23327741],\n",
       "       [0.18431009],\n",
       "       [0.23052516],\n",
       "       [0.12657674],\n",
       "       [0.11084547],\n",
       "       [0.24088189],\n",
       "       [0.14965606],\n",
       "       [0.21123478],\n",
       "       [0.20242979],\n",
       "       [0.11906819],\n",
       "       [0.27681633],\n",
       "       [0.27615435],\n",
       "       [0.27797031],\n",
       "       [0.1400916 ],\n",
       "       [0.15285854],\n",
       "       [0.13149678],\n",
       "       [0.10768707],\n",
       "       [0.147907  ],\n",
       "       [0.22567677],\n",
       "       [0.15229773],\n",
       "       [0.27447361],\n",
       "       [0.18572067],\n",
       "       [0.27274282],\n",
       "       [0.11491643],\n",
       "       [0.21279052],\n",
       "       [0.23502286],\n",
       "       [0.25988208],\n",
       "       [0.15378664],\n",
       "       [0.2267717 ],\n",
       "       [0.20234096],\n",
       "       [0.27798207],\n",
       "       [0.1909592 ],\n",
       "       [0.19225454],\n",
       "       [0.1911234 ],\n",
       "       [0.11511544],\n",
       "       [0.17578423],\n",
       "       [0.24514832],\n",
       "       [0.23063594],\n",
       "       [0.17201735],\n",
       "       [0.27718127],\n",
       "       [0.17936394],\n",
       "       [0.17844421],\n",
       "       [0.26651968],\n",
       "       [0.27377921],\n",
       "       [0.25244676],\n",
       "       [0.24441395],\n",
       "       [0.20193857],\n",
       "       [0.23032258],\n",
       "       [0.10565004],\n",
       "       [0.27541482],\n",
       "       [0.26668423],\n",
       "       [0.27130057],\n",
       "       [0.1826033 ],\n",
       "       [0.26137476],\n",
       "       [0.22467762],\n",
       "       [0.26250884],\n",
       "       [0.271498  ],\n",
       "       [0.2749494 ],\n",
       "       [0.1818402 ],\n",
       "       [0.27312686],\n",
       "       [0.26798599],\n",
       "       [0.2435294 ],\n",
       "       [0.14279546],\n",
       "       [0.27567329],\n",
       "       [0.13885784],\n",
       "       [0.27572412],\n",
       "       [0.10814036],\n",
       "       [0.22419145],\n",
       "       [0.10807698],\n",
       "       [0.19394511],\n",
       "       [0.16209215],\n",
       "       [0.27770671],\n",
       "       [0.25734286],\n",
       "       [0.27435278],\n",
       "       [0.25539599],\n",
       "       [0.27444529],\n",
       "       [0.25204461],\n",
       "       [0.23509971],\n",
       "       [0.2770563 ],\n",
       "       [0.17324704],\n",
       "       [0.20275877],\n",
       "       [0.25976929],\n",
       "       [0.21248226],\n",
       "       [0.27583162],\n",
       "       [0.20062301],\n",
       "       [0.11825801],\n",
       "       [0.25195203],\n",
       "       [0.17921106],\n",
       "       [0.27358169],\n",
       "       [0.16755901],\n",
       "       [0.25638883],\n",
       "       [0.26931845],\n",
       "       [0.19819348],\n",
       "       [0.27797127],\n",
       "       [0.14094591],\n",
       "       [0.2780373 ]])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "  from math import ceil\n",
    "import numpy as np\n",
    "from scipy import linalg\n",
    "for i in range(m):\n",
    "    weights = w[i, :]*X[i]\n",
    "    b = np.array([np.sum(weights*Y), np.sum(weights * Y * X)])\n",
    "    A = np.array([[np.sum(weights), np.sum(weights * X)],\n",
    "                    [np.sum(weights * X), np.sum(weights * X * X)]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "thetanew = linalg.solve(A, b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.54263001,  1.159026  ])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thetanew"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    " yest = thetanew[0] + thetanew[1] * X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 9.34591047e-02],\n",
       "       [ 2.86293055e-01],\n",
       "       [ 1.55988409e-01],\n",
       "       [ 8.89037606e-02],\n",
       "       [-5.16030877e-02],\n",
       "       [ 2.05978055e-01],\n",
       "       [-3.54550601e-02],\n",
       "       [ 4.90958078e-01],\n",
       "       [ 5.74280178e-01],\n",
       "       [-9.82113252e-02],\n",
       "       [ 3.74999888e-01],\n",
       "       [ 7.03729479e-02],\n",
       "       [ 1.15748400e-01],\n",
       "       [ 5.30160553e-01],\n",
       "       [-4.60297376e-01],\n",
       "       [-4.41644891e-01],\n",
       "       [-5.19196366e-01],\n",
       "       [ 4.22398033e-01],\n",
       "       [ 3.59273890e-01],\n",
       "       [ 4.65736684e-01],\n",
       "       [ 5.91614086e-01],\n",
       "       [ 3.83615538e-01],\n",
       "       [-7.76343592e-03],\n",
       "       [ 3.62023593e-01],\n",
       "       [-4.05546880e-01],\n",
       "       [ 1.99055086e-01],\n",
       "       [-3.76479827e-01],\n",
       "       [ 5.52265820e-01],\n",
       "       [ 6.22057576e-02],\n",
       "       [-6.20260455e-02],\n",
       "       [-2.36003182e-01],\n",
       "       [ 3.54726960e-01],\n",
       "       [-1.39399203e-02],\n",
       "       [ 1.16199711e-01],\n",
       "       [-5.20852147e-01],\n",
       "       [ 1.73225584e-01],\n",
       "       [ 1.66804841e-01],\n",
       "       [ 1.72412527e-01],\n",
       "       [ 5.51198544e-01],\n",
       "       [ 2.47617438e-01],\n",
       "       [-1.25951011e-01],\n",
       "       [-3.60986179e-02],\n",
       "       [ 2.65942679e-01],\n",
       "       [-4.72827127e-01],\n",
       "       [ 2.30169943e-01],\n",
       "       [ 2.34656712e-01],\n",
       "       [-2.98791156e-01],\n",
       "       [-3.93201083e-01],\n",
       "       [-1.77040355e-01],\n",
       "       [-1.21079775e-01],\n",
       "       [ 1.18242867e-01],\n",
       "       [-3.42794574e-02],\n",
       "       [ 6.02920959e-01],\n",
       "       [-4.24357425e-01],\n",
       "       [-3.00536423e-01],\n",
       "       [-3.55668089e-01],\n",
       "       [ 2.14339514e-01],\n",
       "       [-2.49058462e-01],\n",
       "       [-2.16370543e-03],\n",
       "       [-2.59334398e-01],\n",
       "       [-3.58380134e-01],\n",
       "       [-4.14702356e-01],\n",
       "       [ 2.18073043e-01],\n",
       "       [-3.82472381e-01],\n",
       "       [-3.14785946e-01],\n",
       "       [-1.15267955e-01],\n",
       "       [ 4.08922483e-01],\n",
       "       [-4.30087111e-01],\n",
       "       [ 4.28569918e-01],\n",
       "       [-4.31249461e-01],\n",
       "       [ 5.89111891e-01],\n",
       "       [ 5.48912384e-04],\n",
       "       [ 5.89461480e-01],\n",
       "       [ 1.58401668e-01],\n",
       "       [ 3.14195693e-01],\n",
       "       [-4.97210344e-01],\n",
       "       [-2.14849392e-01],\n",
       "       [-4.03319075e-01],\n",
       "       [-1.99395826e-01],\n",
       "       [-4.05021501e-01],\n",
       "       [-1.74079242e-01],\n",
       "       [-6.24884336e-02],\n",
       "       [-4.68281398e-01],\n",
       "       [ 2.59963175e-01],\n",
       "       [ 1.14075802e-01],\n",
       "       [-2.35036695e-01],\n",
       "       [ 6.38280830e-02],\n",
       "       [-4.33750520e-01],\n",
       "       [ 1.24906947e-01],\n",
       "       [ 5.34448438e-01],\n",
       "       [-1.73400316e-01],\n",
       "       [ 2.30915967e-01],\n",
       "       [-3.89872865e-01],\n",
       "       [ 2.87611838e-01],\n",
       "       [-2.07200829e-01],\n",
       "       [-3.30306463e-01],\n",
       "       [ 1.37153725e-01],\n",
       "       [-5.19324845e-01],\n",
       "       [ 4.18133030e-01],\n",
       "       [-5.37187835e-01]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "yest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 2.82439061e-01]\n",
      " [-9.92460705e-01]\n",
      " [-2.25371403e-02]\n",
      " [ 5.94998593e-01]\n",
      " [ 7.61861341e-01]\n",
      " [-4.23406483e-01]\n",
      " [ 1.00967411e+00]\n",
      " [-5.47507198e-01]\n",
      " [-5.77533764e-01]\n",
      " [ 1.71958564e+00]\n",
      " [-8.93705347e-01]\n",
      " [ 5.95479309e-01]\n",
      " [ 1.69100494e-01]\n",
      " [-6.83370724e-01]\n",
      " [ 1.70575562e+00]\n",
      " [ 1.35866183e+00]\n",
      " [ 1.52699409e+00]\n",
      " [-7.09383342e-01]\n",
      " [-4.61930006e-01]\n",
      " [-5.02121468e-01]\n",
      " [-3.00966815e-04]\n",
      " [-8.34968114e-01]\n",
      " [ 1.20352326e+00]\n",
      " [-6.99692190e-01]\n",
      " [ 1.50600540e+00]\n",
      " [-3.62858706e-01]\n",
      " [ 1.17944435e+00]\n",
      " [-5.91385461e-01]\n",
      " [ 4.61121484e-01]\n",
      " [ 8.62972215e-01]\n",
      " [ 1.84983946e+00]\n",
      " [-9.14388360e-01]\n",
      " [ 4.21457101e-01]\n",
      " [-2.34772900e-01]\n",
      " [ 1.20860279e+00]\n",
      " [-2.55994780e-01]\n",
      " [-2.39994003e-01]\n",
      " [-1.89589618e-01]\n",
      " [-2.45223658e-01]\n",
      " [-7.25836524e-01]\n",
      " [ 1.79497805e+00]\n",
      " [ 7.89059226e-01]\n",
      " [-7.76429805e-01]\n",
      " [ 1.73419186e+00]\n",
      " [-2.90315499e-01]\n",
      " [-4.08998563e-01]\n",
      " [ 1.36819618e+00]\n",
      " [ 2.03701763e+00]\n",
      " [ 1.80796407e+00]\n",
      " [ 1.87537012e+00]\n",
      " [-3.95692206e-01]\n",
      " [ 1.27868565e+00]\n",
      " [-5.13412404e-01]\n",
      " [ 1.63804763e+00]\n",
      " [ 1.39116032e+00]\n",
      " [ 2.05238437e+00]\n",
      " [-2.27362089e-01]\n",
      " [ 1.81794534e+00]\n",
      " [ 6.19445453e-01]\n",
      " [ 1.32788808e+00]\n",
      " [ 1.89665006e+00]\n",
      " [ 1.50748342e+00]\n",
      " [-3.27764779e-01]\n",
      " [ 2.01204052e+00]\n",
      " [ 2.23450949e+00]\n",
      " [ 1.70549970e+00]\n",
      " [-1.29936071e+00]\n",
      " [ 1.36301895e+00]\n",
      " [-5.49755579e-01]\n",
      " [ 1.17065718e+00]\n",
      " [-2.15446110e-01]\n",
      " [ 2.49488201e-01]\n",
      " [-5.34961055e-01]\n",
      " [-7.52019692e-01]\n",
      " [-5.18223500e-01]\n",
      " [ 9.64878779e-01]\n",
      " [ 1.53903095e+00]\n",
      " [ 2.01684725e+00]\n",
      " [ 1.86208058e+00]\n",
      " [ 1.11555837e+00]\n",
      " [ 1.24892316e+00]\n",
      " [ 1.19698865e+00]\n",
      " [ 1.43773631e+00]\n",
      " [-9.57452448e-01]\n",
      " [ 4.13775905e-01]\n",
      " [ 1.84433133e+00]\n",
      " [ 3.26251793e-01]\n",
      " [ 1.58022561e+00]\n",
      " [ 1.45933820e-01]\n",
      " [-6.52279813e-01]\n",
      " [ 1.48024021e+00]\n",
      " [-8.89424603e-01]\n",
      " [ 1.31272068e+00]\n",
      " [-3.20941368e-01]\n",
      " [ 1.91625606e+00]\n",
      " [ 1.73394754e+00]\n",
      " [-4.26939647e-01]\n",
      " [ 8.99684936e-01]\n",
      " [-1.23959957e+00]\n",
      " [ 1.00110273e+00]]\n"
     ]
    }
   ],
   "source": [
    "  residuals = Y - yest\n",
    "print(residuals)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "\n",
    "plt.plot(X,Y,'b.')\n",
    "plt.plot(X, y_pred, color='g',label ='unweighted linear regression')\n",
    "plt.plot(X,Y,'b.')\n",
    "plt.plot(X, yest, color='r')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
